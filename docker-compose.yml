version: '3.8'
services:
  frontend:
    image: waglay14/frontend
    # build:
    #   context: ./frontend
    #   dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 2m
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.4
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 15s
        max_failure_ratio: 0.4
    healthcheck:
      test: ["CMD-SHELL","curl localhost"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s        
    networks:
     - frontend_net  
  backend:
    image: waglay14/backend
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    container_name: backend
    ports:
      - 5000:5000
    env_file:
      - .env 
    depends_on:
      - mongo
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 2m
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.4
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 15s
        max_failure_ratio: 0.4
    healthcheck:
      test: ls
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s   
  internal:  ## I reckon the service name and the end point name must be same in the endpoints,
    image: waglay14/internal
    # build:
      # context: ./leaderboard  
      # dockerfile: Dockerfile
    container_name: internal
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 2m
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.4
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 15s
        max_failure_ratio: 0.4
    healthcheck:
      test: ls
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
  mongo:
    image: mongo
    # build: 
    #   context: ./mongo
    #   dockerfile: Dockerfile
    container_name: mongo
    # command: --replSet rs0 --smallfiles --oplogSize 128
#command: ["mongosh", "--username", "${MONGO_INITDB_ROOT_USERNAME}", "--password", "${MONGO_INITDB_ROOT_PASSWORD}"]
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 2m
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.4
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 15s
        max_failure_ratio: 0.4
    healthcheck:
      test: ["CMD-SHELL","mongosh"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
networks:
  frontend_net:
    driver: overlay
volumes:
  mongo_data: